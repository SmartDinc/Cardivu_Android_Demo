// Generated by data binding compiler. Do not edit!
package net.sdcor.cardivu_android_demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import net.sdcor.cardivu_android_demo.R;

public abstract class FragmentMeasureBinding extends ViewDataBinding {
  @NonNull
  public final TextView companyNameTextview3;

  @NonNull
  public final Button measureBtn;

  @NonNull
  public final ConstraintLayout measureTop;

  @NonNull
  public final ProgressBar progressBarBpm;

  @NonNull
  public final TextView textViewBpmValue;

  @NonNull
  public final TextView textViewProgressBpm;

  protected FragmentMeasureBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView companyNameTextview3, Button measureBtn, ConstraintLayout measureTop,
      ProgressBar progressBarBpm, TextView textViewBpmValue, TextView textViewProgressBpm) {
    super(_bindingComponent, _root, _localFieldCount);
    this.companyNameTextview3 = companyNameTextview3;
    this.measureBtn = measureBtn;
    this.measureTop = measureTop;
    this.progressBarBpm = progressBarBpm;
    this.textViewBpmValue = textViewBpmValue;
    this.textViewProgressBpm = textViewProgressBpm;
  }

  @NonNull
  public static FragmentMeasureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_measure, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMeasureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentMeasureBinding>inflateInternal(inflater, R.layout.fragment_measure, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentMeasureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_measure, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMeasureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentMeasureBinding>inflateInternal(inflater, R.layout.fragment_measure, null, false, component);
  }

  public static FragmentMeasureBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentMeasureBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentMeasureBinding)bind(component, view, R.layout.fragment_measure);
  }
}
